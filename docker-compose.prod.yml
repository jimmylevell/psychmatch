version: '3.8'
services:
  psychmatch-backend:
    image: ghcr.io/jimmylevell/psychmatch/psychmatch_backend:latest
    networks:
      - traefik-public
      - psychmatch
    environment: 
      NODE_ENV: production
      MARIAN_DB_STRING: /run/secret/MARIAN_DB_STRING
      DEEPL_API_KEY: /run/secret/DEEPL_API_KEY
    secrets:
      - MARIAN_DB_STRING
      - DEEPL_API_KEY
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true # enable traefik
        - traefik.docker.network=traefik-public # put it in the same network as traefik
        - traefik.constraint-label=traefik-public # assign the same label as traefik so it can be discovered
        - traefik.http.routers.psychmatchbackend.rule=Host(`api.psychmatch.app.levell.ch`) # listen to port 80 for request to APP_DOMAIN (use together with the line below)
        - traefik.http.routers.psychmatchbackend.entrypoints=http
        - traefik.http.routers.psychmatchbackend.middlewares=https-redirect
        - traefik.http.middlewares.psychmatchbackend.redirectscheme.scheme=https # redirect traffic to https
        - traefik.http.middlewares.psychmatchbackend.redirectscheme.permanent=true # redirect traffic to https
        - traefik.http.routers.psychmatchbackend-secured.rule=Host(`api.psychmatch.app.levell.ch`) # listen to port 443 for request to APP_DOMAIN (use together with the line below)
        - traefik.http.routers.psychmatchbackend-secured.entrypoints=https
        - traefik.http.routers.psychmatchbackend-secured.tls.certresolver=le # use the Let's Encrypt certificate we set up earlier
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.server.port=3000 # ask Traefik to search for port of the service container
        
        # redundancy required configuration - allowing load balancer to handle multiple replicas
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.sticky=true
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.sticky.cookie.name=StickyCookie
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.sticky.cookie.secure=true
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.healthcheck.path=/api/documents
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.healthcheck.interval=10s
        - traefik.http.services.psychmatchbackend-secured.loadbalancer.healthcheck.timeout=10s

  psychmatch-frontend:
    image: ghcr.io/jimmylevell/psychmatch/psychmatch_frontend:latest
    networks:
      - traefik-public
    environment:
      REACT_APP_BACKEND_URL: https://api.psychmatch.app.levell.ch
      NODE_OPTIONS: --openssl-legacy-provider
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
      - traefik.enable=true # enable traefik
      - traefik.docker.network=traefik-public # put it in the same network as traefik
      - traefik.constraint-label=traefik-public # assign the same label as traefik so it can be discovered
      - traefik.http.routers.psychmatchfrontend.rule=Host(`psychmatch.app.levell.ch`) # listen to port 80 for request to APP_DOMAIN (use together with the line below)
      - traefik.http.routers.psychmatchfrontend.entrypoints=http
      - traefik.http.routers.psychmatchfrontend.middlewares=https-redirect
      - traefik.http.middlewares.psychmatchfrontend.redirectscheme.scheme=https # redirect traffic to https
      - traefik.http.middlewares.psychmatchfrontend.redirectscheme.permanent=true # redirect traffic to https
      - traefik.http.routers.psychmatchfrontend-secured.rule=Host(`psychmatch.app.levell.ch`) # listen to port 443 for request to APP_DOMAIN (use together with the line below)
      - traefik.http.routers.psychmatchfrontend-secured.entrypoints=https
      - traefik.http.routers.psychmatchfrontend-secured.tls.certresolver=le # use the Let's Encrypt certificate we set up earlier
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.server.port=3100 # ask Traefik to search for port service container
      
      # redundancy required configuration - allowing load balancer to handle multiple replicas
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.sticky=true
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.sticky.cookie.name=StickyCookie
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.sticky.cookie.secure=true
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.healthcheck.path=/
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.healthcheck.interval=10s
      - traefik.http.services.psychmatchfrontend-secured.loadbalancer.healthcheck.timeout=10s

networks:
  traefik-public:
    external: true
  psychmatch: 
    external: true
  DEEPL_API_KEY:
    external: true

secrets:
  MARIAN_DB_STRING:
    external: true